version: "3.3"
services:
  model:
    build:
      context: containers/model
    container_name: model
    ports:
      - 1769:1769
    command: python3 app.py
    networks:
      - front
    env_file:
      - containers/model/env.prod
    depends_on:
      - postgresql

  web:
    build:
      context: containers/web
    container_name: web
    expose:
      - 8000
    command: gunicorn --bind :8000 --workers 3 HockeyManager.wsgi:application
    networks: 
      - front
    env_file:
      - containers/web/env.prod
    volumes:
      - ./containers/web/django/HockeyManager/static:/home/app/web/staticfiles
    depends_on:
      - postgresql

  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./containers/web/django/HockeyManager/static:/home/app/web/staticfiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-lets-encrypt
    depends_on:
      - nginx-proxy
      - web
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro

  postgresql:
    container_name: postgresql
    restart: always
    image: pgrouting/pgrouting:13-3.0-3.1.0
    volumes:
      - ./containers/postgresql/data:/var/lib/postgresql/data
      - ./containers/postgresql/tables.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    env_file:
      - containers/postgresql/env.prod
    networks:
      - front

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - containers/pgadmin/env.prod
    ports:
      - "5050:5050"
    networks:
      - front
    restart: unless-stopped
    depends_on:
      - postgresql
      
networks:
  front:
    driver: bridge


volumes:
  certs:
  html:
  vhost: