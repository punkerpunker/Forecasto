version: "3.3"
services:
  model:
    build:
      context: containers/model
    container_name: model
    ports:
      - 1769:1769
    command: python3 app.py
    networks:
      - postgresql-front
    env_file:
      - containers/model/env.prod
    depends_on:
      - postgresql

  web:
    build:
      context: containers/web
    container_name: web
    ports:
      - 80:8000
    command: gunicorn --bind :8000 --workers 3 HockeyManager.wsgi:application
    networks: 
      - postgresql-front
    env_file:
      - containers/web/env.prod
    depends_on:
      - postgresql

  nginx:
    image: nginx:1.19.0-alpine
    ports:
      - 1337:80
    volumes:
      - ./containers/nginx/conf.d:/etc/nginx/conf.d/
    depends_on:
      - web
  
  postgresql:
    container_name: postgresql
    restart: always
    image: pgrouting/pgrouting:13-3.0-3.1.0
    volumes:
      - ./containers/postgresql/data:/var/lib/postgresql/data
      - ./containers/postgresql/tables.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    env_file:
      - containers/postgresql/env.prod
    networks:
      - postgresql-front

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - containers/pgadmin/env.prod
    ports:
      - "5050:5050"
    networks:
      - postgresql-front
    restart: unless-stopped
    depends_on:
      - postgresql
      
networks:
  postgresql-front:
    driver: bridge
